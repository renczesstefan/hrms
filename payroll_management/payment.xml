<?xml version="1.0" encoding="UTF-8"?>
<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://modeler.netgrif.com/petriflow_schema.xsd">
    <id>accountant</id>
    <title>Účtovník</title>
    <!-- TRANSACTIONS -->
    <!-- ROLES -->
    <role>
        <id>accountant</id>
        <title>Účtovník</title>
    </role>
    <!-- DATA -->
    <data type="file">
        <id>csv_file</id>
        <title>Csv súbor</title>
    </data>
    <data type="text">
        <id>email_accountant</id>
        <title>Csv nazov</title>
    </data>
    <data type="file">
        <id>csv_file_payment</id>
        <title>Csv súbor s hromadnou platbou</title>
    </data>
    <data type="text">
        <id>csv_file_payment</id>
        <title>Csv súbor s hromadnou platbou</title>
    </data>
    <!-- TRANSITIONS -->
    <transition>
        <id>2</id>
        <x>300</x>
        <y>300</y>
        <label>Nahratie csv súboru</label>
        <assignPolicy>auto</assignPolicy>
        <roleRef>
            <id>accountant</id>
            <logic>
                <perform>true</perform>
            </logic>
        </roleRef>
        <dataGroup>
            <id>101</id>
            <title>Nahratie csv súboru</title>
            <dataRef>
                <id>csv_file</id>
                <logic>
                    <behavior>editable</behavior>
                    <behavior>required</behavior>
                </logic>
            </dataRef>
            <dataRef>
                <id>email_accountant</id>
                <logic>
                    <behavior>editable</behavior>
                    <behavior>required</behavior>
                </logic>
            </dataRef>
        </dataGroup>
        <event type="finish">
            <id>201</id>
            <actions phase="pre">
                <action>
                    csv_file: f.csv_file;

                    def path = csv_file.value.path

                    def employeeToHours = [:]
                    def csvLines = new BufferedReader(new FileReader(path))
                        .lines()
                        .skip(1) //Skips the first n lines, in this case 1
                        .map { s ->
                            String[] values = s.split(',')
                            String employeeName = values[5]
                            Double timeSpent = (values[8] as Double)

                            if (employeeToHours.get(employeeName) == null) {
                                employeeToHours.put(employeeName, timeSpent)
                            } else {
                                employeeToHours.put(employeeName, timeSpent + employeeToHours.get(employeeName))
                            }
                            return s
                        } .collect()

                    employeeToHours.each { key, value ->
                        def payOutCase = createCase("pol", "Výplatná páska")
                        def payOutTask = assignTask("2", payOutCase)
                        def fullName = key.split()
                        def employeeCase = findCase({
                            it.dataSet.get("name").value.eq("asdasd")
                        })


                        setData(payOutTask, [
                            "name": [
                                "value": key,
                                "type" : "text"
                            ],
                            "payout_total": [
                                "value": (value * employeeCase.dataSet["brutto"] as Double) as String,
                                "type" : "text"
                            ]
                        ])
                    }
                </action>
            </actions>
        </event>
    </transition>
    <transition>
        <id>14</id>
        <x>580</x>
        <y>300</y>
        <label>Vygenerovanie výplatných pások</label>
    </transition>
    <!-- PLACES -->
    <place>
        <id>1</id>
        <x>140</x>
        <y>300</y>
        <label></label>
        <tokens>1</tokens>
        <static>false</static>
    </place>
    <place>
        <id>3</id>
        <x>420</x>
        <y>300</y>
        <label></label>
        <tokens>0</tokens>
        <static>false</static>
    </place>
    <place>
        <id>15</id>
        <x>740</x>
        <y>300</y>
        <label></label>
        <tokens>0</tokens>
        <static>false</static>
    </place>
    <!-- ARCS -->
    <arc>
        <id>4</id>
        <type>regular</type>
        <sourceId>1</sourceId>
        <destinationId>2</destinationId>
        <multiplicity>1</multiplicity>
    </arc>
    <arc>
        <id>5</id>
        <type>regular</type>
        <sourceId>2</sourceId>
        <destinationId>3</destinationId>
        <multiplicity>1</multiplicity>
    </arc>
    <arc>
        <id>17</id>
        <type>regular</type>
        <sourceId>14</sourceId>
        <destinationId>15</destinationId>
        <multiplicity>1</multiplicity>
    </arc>
    <arc>
        <id>25</id>
        <type>regular</type>
        <sourceId>3</sourceId>
        <destinationId>14</destinationId>
        <multiplicity>1</multiplicity>
    </arc>
</document>